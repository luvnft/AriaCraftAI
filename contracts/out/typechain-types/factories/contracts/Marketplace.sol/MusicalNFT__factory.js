"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MusicalNFT__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "ERC721IncorrectOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ERC721InsufficientApproval",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "approver",
                type: "address",
            },
        ],
        name: "ERC721InvalidApprover",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "ERC721InvalidOperator",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "ERC721InvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
        ],
        name: "ERC721InvalidReceiver",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
        ],
        name: "ERC721InvalidSender",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ERC721NonexistentToken",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "approved",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "ApprovalForAll",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "base",
                type: "uint256",
            },
        ],
        name: "generateUUID",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "getApproved",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "artist",
                type: "address",
            },
        ],
        name: "mintMusicalNFT",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address payable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ownerOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b506040518060400160405280600a81526020017f4d75736963616c4e4654000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f6d73636c4e46540000000000000000000000000000000000000000000000000081525081600090816200008f919062000324565b508060019081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b6120dc806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063b975d64911610066578063b975d649146102ab578063c87b56dd146102c7578063e985e9c5146102f7578063faa5305e1461032757610100565b80638da5cb5b1461023757806395d89b4114610255578063a22cb46514610273578063b88d4fde1461028f57610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d757806370a082311461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611795565b610357565b60405161012c91906117dd565b60405180910390f35b61013d610439565b60405161014a9190611888565b60405180910390f35b61016d600480360381019061016891906118e0565b6104cb565b60405161017a919061194e565b60405180910390f35b61019d60048036038101906101989190611995565b6104e7565b005b6101b960048036038101906101b491906119d5565b6104fd565b005b6101d560048036038101906101d091906119d5565b6105ff565b005b6101f160048036038101906101ec91906118e0565b61061f565b6040516101fe919061194e565b60405180910390f35b610221600480360381019061021c9190611a28565b610631565b60405161022e9190611a64565b60405180910390f35b61023f6106eb565b60405161024c9190611aa0565b60405180910390f35b61025d610711565b60405161026a9190611888565b60405180910390f35b61028d60048036038101906102889190611ae7565b6107a3565b005b6102a960048036038101906102a49190611c5c565b6107b9565b005b6102c560048036038101906102c09190611a28565b6107d6565b005b6102e160048036038101906102dc91906118e0565b610831565b6040516102ee9190611888565b60405180910390f35b610311600480360381019061030c9190611cdf565b61089a565b60405161031e91906117dd565b60405180910390f35b610341600480360381019061033c91906118e0565b61092e565b60405161034e9190611888565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104325750610431826109ae565b5b9050919050565b60606000805461044890611d4e565b80601f016020809104026020016040519081016040528092919081815260200182805461047490611d4e565b80156104c15780601f10610496576101008083540402835291602001916104c1565b820191906000526020600020905b8154815290600101906020018083116104a457829003601f168201915b5050505050905090565b60006104d682610a18565b506104e082610aa0565b9050919050565b6104f982826104f4610add565b610ae5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361056f5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610566919061194e565b60405180910390fd5b6000610583838361057e610add565b610af7565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105f9578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105f093929190611d7f565b60405180910390fd5b50505050565b61061a838383604051806020016040528060008152506107b9565b505050565b600061062a82610a18565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a45760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161069b919061194e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001805461072090611d4e565b80601f016020809104026020016040519081016040528092919081815260200182805461074c90611d4e565b80156107995780601f1061076e57610100808354040283529160200191610799565b820191906000526020600020905b81548152906001019060200180831161077c57829003601f168201915b5050505050905090565b6107b56107ae610add565b8383610d11565b5050565b6107c48484846104fd565b6107d084848484610e80565b50505050565b6001600760008282546107e99190611de5565b9250508190555060006107fd60075461092e565b905061082d600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600754611037565b5050565b606061083c82610a18565b506000610847611055565b905060008151116108675760405180602001604052806000815250610892565b806108718461106c565b604051602001610882929190611e55565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600261093b8361106c565b6040516109489190611ec0565b602060405180830381855afa158015610965573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906109889190611f0d565b6040516020016109989190611f5b565b6040516020818303038152906040529050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610a248361113a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a9757826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a8e9190611a64565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610af28383836001611177565b505050565b600080610b038461113a565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b4557610b4481848661133c565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bd657610b87600085600080611177565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c59576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d8257816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d79919061194e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e7391906117dd565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611031578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ec4610add565b8685856040518563ffffffff1660e01b8152600401610ee69493929190611fc0565b6020604051808303816000875af1925050508015610f2257506040513d601f19601f82011682018060405250810190610f1f9190612021565b60015b610fa6573d8060008114610f52576040519150601f19603f3d011682016040523d82523d6000602084013e610f57565b606091505b506000815103610f9e57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f95919061194e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461102f57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611026919061194e565b60405180910390fd5b505b50505050565b611051828260405180602001604052806000815250611400565b5050565b606060405180602001604052806000815250905090565b60606000600161107b8461141c565b01905060008167ffffffffffffffff81111561109a57611099611b31565b5b6040519080825280601f01601f1916602001820160405280156110cc5781602001600182028036833780820191505090505b509050600082602001820190505b60011561112f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816111235761112261204e565b5b049450600085036110da575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111b05750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156112e45760006111c084610a18565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561122b57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561123e575061123c818461089a565b155b1561128057826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611277919061194e565b60405180910390fd5b81156112e257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61134783838361156f565b6113fb57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113bc57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113b39190611a64565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016113f292919061207d565b60405180910390fd5b505050565b61140a8383611630565b6114176000848484610e80565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061147a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114705761146f61204e565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114b7576d04ee2d6d415b85acef810000000083816114ad576114ac61204e565b5b0492506020810190505b662386f26fc1000083106114e657662386f26fc1000083816114dc576114db61204e565b5b0492506010810190505b6305f5e100831061150f576305f5e10083816115055761150461204e565b5b0492506008810190505b612710831061153457612710838161152a5761152961204e565b5b0492506004810190505b60648310611557576064838161154d5761154c61204e565b5b0492506002810190505b600a8310611566576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561162757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115e857506115e7848461089a565b5b8061162657508273ffffffffffffffffffffffffffffffffffffffff1661160e83610aa0565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116a25760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611699919061194e565b60405180910390fd5b60006116b083836000610af7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117245760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161171b919061194e565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117728161173d565b811461177d57600080fd5b50565b60008135905061178f81611769565b92915050565b6000602082840312156117ab576117aa611733565b5b60006117b984828501611780565b91505092915050565b60008115159050919050565b6117d7816117c2565b82525050565b60006020820190506117f260008301846117ce565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611832578082015181840152602081019050611817565b60008484015250505050565b6000601f19601f8301169050919050565b600061185a826117f8565b6118648185611803565b9350611874818560208601611814565b61187d8161183e565b840191505092915050565b600060208201905081810360008301526118a2818461184f565b905092915050565b6000819050919050565b6118bd816118aa565b81146118c857600080fd5b50565b6000813590506118da816118b4565b92915050565b6000602082840312156118f6576118f5611733565b5b6000611904848285016118cb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119388261190d565b9050919050565b6119488161192d565b82525050565b6000602082019050611963600083018461193f565b92915050565b6119728161192d565b811461197d57600080fd5b50565b60008135905061198f81611969565b92915050565b600080604083850312156119ac576119ab611733565b5b60006119ba85828601611980565b92505060206119cb858286016118cb565b9150509250929050565b6000806000606084860312156119ee576119ed611733565b5b60006119fc86828701611980565b9350506020611a0d86828701611980565b9250506040611a1e868287016118cb565b9150509250925092565b600060208284031215611a3e57611a3d611733565b5b6000611a4c84828501611980565b91505092915050565b611a5e816118aa565b82525050565b6000602082019050611a796000830184611a55565b92915050565b6000611a8a8261190d565b9050919050565b611a9a81611a7f565b82525050565b6000602082019050611ab56000830184611a91565b92915050565b611ac4816117c2565b8114611acf57600080fd5b50565b600081359050611ae181611abb565b92915050565b60008060408385031215611afe57611afd611733565b5b6000611b0c85828601611980565b9250506020611b1d85828601611ad2565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b698261183e565b810181811067ffffffffffffffff82111715611b8857611b87611b31565b5b80604052505050565b6000611b9b611729565b9050611ba78282611b60565b919050565b600067ffffffffffffffff821115611bc757611bc6611b31565b5b611bd08261183e565b9050602081019050919050565b82818337600083830152505050565b6000611bff611bfa84611bac565b611b91565b905082815260208101848484011115611c1b57611c1a611b2c565b5b611c26848285611bdd565b509392505050565b600082601f830112611c4357611c42611b27565b5b8135611c53848260208601611bec565b91505092915050565b60008060008060808587031215611c7657611c75611733565b5b6000611c8487828801611980565b9450506020611c9587828801611980565b9350506040611ca6878288016118cb565b925050606085013567ffffffffffffffff811115611cc757611cc6611738565b5b611cd387828801611c2e565b91505092959194509250565b60008060408385031215611cf657611cf5611733565b5b6000611d0485828601611980565b9250506020611d1585828601611980565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d6657607f821691505b602082108103611d7957611d78611d1f565b5b50919050565b6000606082019050611d94600083018661193f565b611da16020830185611a55565b611dae604083018461193f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df0826118aa565b9150611dfb836118aa565b9250828201905080821115611e1357611e12611db6565b5b92915050565b600081905092915050565b6000611e2f826117f8565b611e398185611e19565b9350611e49818560208601611814565b80840191505092915050565b6000611e618285611e24565b9150611e6d8284611e24565b91508190509392505050565b600081519050919050565b600081905092915050565b6000611e9a82611e79565b611ea48185611e84565b9350611eb4818560208601611814565b80840191505092915050565b6000611ecc8284611e8f565b915081905092915050565b6000819050919050565b611eea81611ed7565b8114611ef557600080fd5b50565b600081519050611f0781611ee1565b92915050565b600060208284031215611f2357611f22611733565b5b6000611f3184828501611ef8565b91505092915050565b6000819050919050565b611f55611f5082611ed7565b611f3a565b82525050565b6000611f678284611f44565b60208201915081905092915050565b600082825260208201905092915050565b6000611f9282611e79565b611f9c8185611f76565b9350611fac818560208601611814565b611fb58161183e565b840191505092915050565b6000608082019050611fd5600083018761193f565b611fe2602083018661193f565b611fef6040830185611a55565b81810360608301526120018184611f87565b905095945050505050565b60008151905061201b81611769565b92915050565b60006020828403121561203757612036611733565b5b60006120458482850161200c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050612092600083018561193f565b61209f6020830184611a55565b939250505056fea26469706673582212207b704d97fbac580256884b262aebd3fa9750c6a1c272abb4cc576f53f3b9bf1f64736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class MusicalNFT__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.MusicalNFT__factory = MusicalNFT__factory;
MusicalNFT__factory.bytecode = _bytecode;
MusicalNFT__factory.abi = _abi;
//# sourceMappingURL=MusicalNFT__factory.js.map